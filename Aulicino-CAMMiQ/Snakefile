from os.path import join
import pandas as pd
from snakemake.utils import min_version
##### set minimum snakemake version #####
min_version("5.1.2")

##### load config and sample sheets #####
configfile: "config/CAMMiQ-subspecies-comparison-config.yaml"

patients = pd.read_csv(config["patients"], sep="\t").set_index("patient", drop=False)
# validate(samples, schema="schemas/samples.schema.yaml")

samples = pd.read_csv(config["samples"], dtype=str, sep="\t").set_index(["patient", "sample"], drop=False)
# print(samples)
samples.index = samples.index.set_levels([i.astype(str) for i in samples.index.levels])  # enforce str in index
# validate(units, schema="schemas/units.schema.yaml")

# directories
FASTQ_DIR = join("FASTQ", "raw")

# Intermediate Files
SRA_FASTQ1_FILE = join(FASTQ_DIR,  "{sample}_1.fastq")
SRA_FASTQ2_FILE = join(FASTQ_DIR, "{sample}_2.fastq")
FASTQ1_FILE = join(FASTQ_DIR,  "{patient}-{sample}_1.fastq.gz")
FASTQ2_FILE = join(FASTQ_DIR, "{patient}-{sample}_2.fastq.gz")
TRIMMED_FASTQ1_FILE = join("FASTQ", "trimmed", "{patient}-{sample}_1.fastq.gz")
TRIMMED_FASTQ2_FILE = join("FASTQ", "trimmed", "{patient}-{sample}_2.fastq.gz")
TRIMMED_UNPAIRED_FILE = join("FASTQ", "trimmed", "{patient}-{sample}_3.fastq.gz")
FAILED_READS_FILE = join("FASTQ", "trimmed", "{patient}-{sample}_failed.fastq.gz")
HTML_REPORT = join("FASTQ", "trimmed", "{patient}-{sample}_report.html")

# Output Files
PathSeq_Output_File = join("output", "PathSeq", "{patient}-{sample}", "pathseq.txt")
PathSeq_BAM_File = join("output", "PathSeq", "{patient}-{sample}", "pathseq.bam")


# include rules
include: "../RNA-snakemake-rules/rules/ERCC92.smk"
include: "../RNA-snakemake-rules/rules/genome.smk"
include: "../RNA-snakemake-rules/rules/trim.smk"
include: "../pathogen-discovery-rules/rules/filter-host-reads.smk"
include: "../pathogen-discovery-rules/rules/PathSeq-host-filter-batch.smk"
#include: "../pathogen-discovery-rules/rules/make-PathSeq-files.smk"


rule all:
    input:
        join("data", "subspecies_genome.fa")

rule remove_plasmid_sequences:
    conda:
        "../envs/biopython.yaml"
    input:
        join("data", "subspecies_with_plasmids.fa")
    output:
        join("data", "subspecies_genome.fa")
    script:
        "src/remove_plasmids_from_fasta.py"



# rules for downloading microbe genomes
rule download_combine_subspe_genomes:
    input:
        join("data", "genome_map_subsp.tsv")
    output:
        join("data", "subspecies_with_plasmids.fa")
    run:
        df = pd.read_csv(input[0], sep="\t")
        shell("touch {output}")
        for index, row in df.iterrows():
            url = row["url"]
            shell("wget -O - {url} | gunzip -c >> {output}")


# rules for downloading sequencing data
rule compress_FASTQ_File:
    group:
        "FASTQ"
    input:
        SRA_FASTQ1_FILE,
        SRA_FASTQ2_FILE
    output:
        FASTQ1_FILE,
        FASTQ2_FILE
    shell:
        "gzip -vc {input[0]} > {output[0]} && "
        "gzip -vc {input[1]} > {output[1]}"

rule download_FASTQ_from_SRA:
    group:
        "FASTQ"
    params:
        FASTQ_DIR
    output:
        temp(SRA_FASTQ1_FILE),
        temp(SRA_FASTQ2_FILE)
    shell:
        "module load sratoolkit && "
        "fasterq-dump -O {params} -t /lscratch/$SLURM_JOBID "
        "--split-files {wildcards.sample}"
