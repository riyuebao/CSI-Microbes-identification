from os.path import join
import pandas as pd
from snakemake.utils import min_version
##### set minimum snakemake version #####
min_version("5.1.2")

##### load config and sample sheets #####
configfile: "config/salmonella-only-config.yml"
#validate(config, schema="schemas/config.schema.yaml")

patients = pd.read_csv(config["patients"], sep="\t").set_index("patient", drop=False)
# validate(samples, schema="schemas/samples.schema.yaml")

samples = pd.read_csv(config["samples"], dtype=str, sep="\t").set_index(["patient", "sample"], drop=False)
# print(samples)
samples.index = samples.index.set_levels([i.astype(str) for i in samples.index.levels])  # enforce str in index
# validate(units, schema="schemas/units.schema.yaml")

# URLs
D23580_URL = "https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/027/025/GCF_000027025.1_ASM2702v1/GCF_000027025.1_ASM2702v1_genomic.fna.gz"
LT2_URL = "https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/006/945/GCF_000006945.2_ASM694v2/GCF_000006945.2_ASM694v2_genomic.fna.gz"
ERCC92_URL = "https://tools.thermofisher.com/content/sfs/manuals/ERCC92.zip"
# directories
FASTQ_DIR = join("FASTQ", "raw")

# Intermediate Files
SRA_FASTQ1_FILE = join(FASTQ_DIR,  "{sample}_1.fastq")
SRA_FASTQ2_FILE = join(FASTQ_DIR, "{sample}_2.fastq")
FASTQ1_FILE = join(FASTQ_DIR,  "{patient}-{sample}_1.fastq.gz")
FASTQ2_FILE = join(FASTQ_DIR, "{patient}-{sample}_2.fastq.gz")

# Output Files
# PathSeq_Output_File = join("output", "PathSeq", "{patient}-{sample}", "pathseq.txt")
FILTERED_PATHSEQ_READS_FILE = join("output", "scPathSeq", "{patient}.{sample}", "Filtered_PathSeq_reads.tsv")
# include rules
include: "../../RNA-snakemake-rules/rules/genome.smk"
include: "../../RNA-snakemake-rules/rules/STARsolo.smk"
include: "../../pathogen-discovery-rules/rules/scPathSeq.smk"

patients = patients["Cell_type"].isin(["CD45-", "All", "CD3-", "CD45- CD3-"])

samples = samples.loc[samples["Assay Type"] == "RNA-Seq"]
samples = samples.loc[samples.patient.isin(patients.patient)]
rule all:
    input:
        expand(PathSeq_Output_File, zip, patient=samples["patient"], sample=samples["sample"])

# compress and rename - the identity of FASTQ1, etc. depends on the dataset
rule compress_rename_SRA_FASTQ_files:
    input:
        CellBarcode_fq = SRA_FASTQ1_FILE,
        cDNA_fq = SRA_FASTQ2_FILE
    output:
        CellBarcode_fq = CellBarcode_FASTQ_FILE,
        cDNA_fq = cDNA_FASTQ_FILE
    shell:
        "gzip -vc {input.CellBarcode_fq} > {output.CellBarcode_fq} && "
        "gzip -vc {input.cDNA_fq} > {output.cDNA_fq}"


rule download_FASTQ_from_SRA:
    params:
        FASTQ_DIR
    output:
        temp(SRA_FASTQ1_FILE),
        temp(SRA_FASTQ2_FILE)
    shell:
        "module load sratoolkit && "
        "fasterq-dump -O {params} -t /lscratch/$SLURM_JOBID "
        "--split-files {wildcards.sample}"
