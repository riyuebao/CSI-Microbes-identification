from os.path import join, basename
import pandas as pd
from snakemake.utils import min_version
##### set minimum snakemake version #####
min_version("5.1.2")
#plate = config["plate"]
#patient = config["patient"]
##### load config and sample sheets #####
configfile: "config/PathSeq-config.yaml"
#validate(config, schema="schemas/config.schema.yaml")

# patients = pd.read_csv(config["patients"], sep="\t").set_index("patient", drop=False)
# validate(samples, schema="schemas/samples.schema.yaml")

cells = pd.read_csv(config["units"], dtype=str, sep="\t").set_index(["patient", "sample"], drop=False)

# SRR7667879 won't download from SRA for some reason
cells = cells.loc[~cells["Run"] == "SRR7667879"]
# SRR7667876 has issues with the pairing of the reads - may be corrupted
cells = cells.loc[~cells["Run"] == "SRR7667876"]
cells = cells.loc[cells.patient.isin(["PT039", "PT058", "PT084", "PT089", "PT126"])]

wildcard_constraints:
    patient="|".join(cells["patient"].unique()),
    sample="|".join(cells["sample"].unique()),
    plate="|".join(cells["plate"].unique()),
    cell="|".join(cells["cell"].unique()),

# directories
FASTQ_DIR = "FASTQ"
RAW_FASTQ_DIR = join(FASTQ_DIR, "raw")

# Intermediate Files
SRA_FASTQ1_FILE = join(RAW_FASTQ_DIR,  "{run}_1.fastq")
SRA_FASTQ2_FILE = join(RAW_FASTQ_DIR, "{run}_2.fastq")
FASTQ1_FILE = join(RAW_FASTQ_DIR,  "{patient}-{sample}_1.fastq.gz")
FASTQ2_FILE = join(RAW_FASTQ_DIR, "{patient}-{sample}_2.fastq.gz")
TRIMMED_FASTQ1_FILE = join("FASTQ", "trimmed", "{patient}-{sample}_1.fastq.gz")
TRIMMED_FASTQ2_FILE = join("FASTQ", "trimmed", "{patient}-{sample}_2.fastq.gz")
TRIMMED_UNPAIRED_FILE = join("FASTQ", "trimmed", "{patient}-{sample}_3.fastq.gz")

#samples = samples.loc[samples.plate == "B1-P1"]

# include rules
include: "../RNA-snakemake-rules/rules/genome.smk"
include: "../RNA-snakemake-rules/rules/trim.smk"
include: "../RNA-snakemake-rules/rules/STARsolo_SmartSeq.smk"
include: "../pathogen-discovery-rules/rules/filter-host-reads.smk"
include: "../pathogen-discovery-rules/rules/PathSeq-host-filter-single.smk"

PATHSEQ_BAM_FILE = join("output", "PathSeq", "{patient}-{sample}-{plate}", "pathseq.bam")
PATHSEQ_CELL_SCORE_FILE = join("output", "PathSeq", "{patient}-{sample}-{plate}-{cell}", "pathseq.txt")

rule all:
    input:
        expand(PATHSEQ_CELL_SCORE_FILE, zip, sample=samples["sample"], patient=samples["patient"]),


def get_SRA_fq_files(wildcards):
    run = cells.loc[(wildcards.patient, wildcards.sample, wildcards.cell), "Run"]
    return {
        "FQ1": SRA_FASTQ1_FILE.format(run=run),
        "FQ2": SRA_FASTQ2_FILE.format(run=run),
    }

rule compress_FASTQ_File:
    group:
        "FASTQ"
    input:
        get_SRA_fq_files
    output:
        FASTQ1_FILE,
        FASTQ2_FILE
    shell:
        "gzip -vc {input[0]} > {output[0]} && "
        "gzip -vc {input[1]} > {output[1]}"

rule download_FASTQ_from_SRA:
    group:
        "FASTQ"
    params:
        RAW_FASTQ_DIR
    output:
        temp(SRA_FASTQ1_FILE),
        temp(SRA_FASTQ2_FILE)
    shell:
        "module load sratoolkit && "
        "fasterq-dump -O {params} -t /lscratch/$SLURM_JOBID "
        "--split-files {wildcards.run}"
