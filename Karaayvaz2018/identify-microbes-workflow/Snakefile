from os.path import join
import pandas as pd
from snakemake.utils import min_version
##### set minimum snakemake version #####
min_version("5.1.2")

##### load config and sample sheets #####
configfile: "config/PathSeq-config.yaml"
#validate(config, schema="schemas/config.schema.yaml")

patients = pd.read_csv(config["patients"], sep="\t").set_index("patient", drop=False)
# validate(samples, schema="schemas/samples.schema.yaml")

samples = pd.read_csv(config["samples"], dtype=str, sep="\t").set_index(["patient", "sample"], drop=False)
# print(samples)
samples.index = samples.index.set_levels([i.astype(str) for i in samples.index.levels])  # enforce str in index
# validate(units, schema="schemas/units.schema.yaml")

# directories
FASTQ_DIR = join("FASTQ", "raw")

# Intermediate Files
SRA_FASTQ1_FILE = join(FASTQ_DIR,  "{sample}_1.fastq")
SRA_FASTQ2_FILE = join(FASTQ_DIR, "{sample}_2.fastq")
FASTQ1_FILE = join(FASTQ_DIR,  "{patient}-{sample}_1.fastq.gz")
FASTQ2_FILE = join(FASTQ_DIR, "{patient}-{sample}_2.fastq.gz")

# Output Files
KRAKEN_PAIRED_BIOM_FILE = join("output", "Kraken", "{patient}-{sample}", "paired-sequences.biom")
KRAKEN_UNPAIRED_BIOM_FILE = join("output", "Kraken", "{patient}-{sample}", "unpaired-sequences.biom")
# SRR7667879 won't download from SRA for some reason
samples = samples.loc[~samples["sample"].isin(["SRR7667879"])]
# SRR7667876 has issues with the pairing of the reads - may be corrupted
samples = samples.loc[~samples["sample"].isin(["SRR7667876"])]
# samples with no reads (paired or unpaired) that pass PathSeqFilter
samples_without_microbial_reads = [
    "SRR7667609", "SRR7667621", "SRR7667628", "SRR7667610", "SRR7667624", "SRR7667777",
    "SRR7667781", "SRR7667616", "SRR7667611", "SRR7667574", "SRR7667617", "SRR7667627",
    "SRR7667804", "SRR7667622", "SRR7667797", "SRR7667618", "SRR7667612", "SRR7667774",
    "SRR7667571", "SRR7667607", "SRR7667783", "SRR7667619"
    ]
samples = samples.loc[~samples["sample"].isin(samples_without_microbial_reads)]
# these samples either have no paired candidate microbial reads
# causes a bug in PathSeqFilter
samples_without_paired_microbial_reads = [
    "SRR7667753", "SRR7667733", "SRR7667734", "SRR7667836", "SRR7667717",
    "SRR7667730", "SRR7667727", "SRR7667578", "SRR7667776", "SRR7667852",
    "SRR7667853", "SRR7667847", "SRR7667573", "SRR7667569", "SRR7667855",
    "SRR7667854", "SRR7667844", "SRR7667833", "SRR7667802", "SRR7667821",
    "SRR7667789", "SRR7667842", "SRR7667785", "SRR7667835", "SRR7667827",
    "SRR7667791", "SRR7667572", "SRR7667793", "SRR7667784", "SRR7667575",
    "SRR7667825", "SRR7667857", "SRR7667863", "SRR7667625", "SRR7667623",
    "SRR7667829", "SRR7667775", "SRR7667794", "SRR7667822", "SRR7667771",
    "SRR7667772", "SRR7667620", "SRR7667798", "SRR7667807", "SRR7667858",
    "SRR7667626", "SRR7667809", "SRR7667579", "SRR7667805", "SRR7667846",
    "SRR7667830", "SRR7667867", "SRR7667614", "SRR7667861", "SRR7667818",
    "SRR7667866", "SRR7667813", "SRR7667859", "SRR7667782", "SRR7667786",
    "SRR7667815"
    ]
# these samples have no unpaired candidate microbial reads
# causes a bug in PathSeqFilter
samples_without_unpaired_microbial_reads = [
    "SRR7667576", "SRR7667864", "SRR7667841", "SRR7667837", "SRR7667795", "SRR7667801",
    "SRR7667613", "SRR7667808", "SRR7667796", "SRR7667630", "SRR7667629"
    ]
# let's run for samples without paired microbial reads
samples = samples.loc[samples["sample"].isin(samples_without_unpaired_microbial_reads)]


# include rules
include: "../../RNA-snakemake-rules/rules/genome.smk"
include: "../../RNA-snakemake-rules/rules/STAR.smk"
include: "../../pathogen-discovery-rules/rules/kraken.smk"

rule all:
    input:
        expand(KRAKEN_PAIRED_BIOM_FILE, zip, patient=samples["patient"], sample=samples["sample"]),
        #expand(KRAKEN_UNPAIRED_BIOM_FILE, zip, patient=samples["patient"], sample=samples["sample"]),

rule compress_FASTQ_File:
    input:
        SRA_FASTQ1_FILE,
        SRA_FASTQ2_FILE
    output:
        FASTQ1_FILE,
        FASTQ2_FILE
    shell:
        "gzip -vc {input[0]} > {output[0]} && "
        "gzip -vc {input[1]} > {output[1]}"

rule download_FASTQ_from_SRA:
    params:
        FASTQ_DIR
    output:
        temp(SRA_FASTQ1_FILE),
        temp(SRA_FASTQ2_FILE)
    shell:
        "module load sratoolkit && "
        "fasterq-dump -O {params} -t /lscratch/$SLURM_JOBID "
        "--split-files {wildcards.sample}"
