from os.path import join
import pandas as pd
from snakemake.utils import min_version
##### set minimum snakemake version #####
min_version("5.1.2")

##### load config and sample sheets #####
configfile: join("config", "PathSeq-config.yaml")
#validate(config, schema="schemas/config.schema.yaml")

patients = pd.read_csv(config["patients"], sep="\t").set_index("patient", drop=False)
# validate(samples, schema="schemas/samples.schema.yaml")

samples = pd.read_csv(config["samples"], dtype=str, sep="\t").set_index(["patient", "sample"], drop=False)
# print(samples)
samples.index = samples.index.set_levels([i.astype(str) for i in samples.index.levels])  # enforce str in index
# validate(units, schema="schemas/units.schema.yaml")

# directories
FASTQ_DIR = join("FASTQ", "raw")

# Intermediate Files
SRA_FASTQ1_FILE = join(FASTQ_DIR,  "{sample}_1.fastq")
SRA_FASTQ2_FILE = join(FASTQ_DIR, "{sample}_2.fastq")
FASTQ1_FILE = join(FASTQ_DIR,  "{patient}-{sample}_1.fastq.gz")
FASTQ2_FILE = join(FASTQ_DIR, "{patient}-{sample}_2.fastq.gz")

# Output Files
KRAKEN_PAIRED_BIOM_FILE = join("output", "Kraken", "{patient}-{sample}", "paired-sequences.biom")
KRAKEN_UNPAIRED_BIOM_FILE = join("output", "Kraken", "{patient}-{sample}", "unpaired-sequences.biom")

# include rules
include: "../../RNA-snakemake-rules/rules/ERCC92.smk"
include: "../../RNA-snakemake-rules/rules/genome.smk"
include: "../../RNA-snakemake-rules/rules/STAR.smk"
include: "../../pathogen-discovery-rules/rules/kraken.smk"


rule all:
    input:
        expand(KRAKEN_PAIRED_BIOM_FILE, zip, patient=samples["patient"], sample=samples["sample"]),
        expand(KRAKEN_UNPAIRED_BIOM_FILE, zip, patient=samples["patient"], sample=samples["sample"]),


rule compress_FASTQ_File:
    input:
        SRA_FASTQ1_FILE,
        SRA_FASTQ2_FILE
    output:
        FASTQ1_FILE,
        FASTQ2_FILE
    shell:
        "gzip -vc {input[0]} > {output[0]} && "
        "gzip -vc {input[1]} > {output[1]}"

rule download_FASTQ_from_SRA:
    params:
        FASTQ_DIR
    output:
        temp(SRA_FASTQ1_FILE),
        temp(SRA_FASTQ2_FILE)
    shell:
        "module load sratoolkit && "
        "fasterq-dump -O {params} -t /lscratch/$SLURM_JOBID "
        "--split-files {wildcards.sample}"
